PART2                                                                                                                   PAGE 1
                         1     ORG 0H
0000 C2B3                2     CLR P3.3; for debugging purposes
0002 7538C6              3     MOV 38H,#0C6H;6193
0005 7539A8              4     MOV 39H,#0A8H
                         5
                         6     RESET:
0008 3167                7     ACALL SETUP
000A 758800              8     MOV TCON,#0
000D 758900              9     MOV TMOD,#0
0010 758C00             10     MOV TH0,#0
0013 758A00             11     MOV TL0,#0
0016 7830               12     MOV R0,#30H
0018 753000             13     MOV 30H,#0
001B 753100             14     MOV 31H,#0
                        15
                        16
                        17     KEYBOARD_LOOP:
001E 31A7               18     ACALL KEYBOARD
0020 B42302             19     CJNE A,#23H,NVM1
0023 0130               20     AJMP BREAK
0025 1129               21     NVM1: ACALL RECORD_DATA
0027 80F5               22     SJMP KEYBOARD_LOOP
                        23
                        24     RECORD_DATA:
0029 3189               25     ACALL SEND_DATA
002B 9430               26     SUBB A,#30H
002D F6                 27     MOV @R0,A
002E 08                 28     INC R0
002F 22                 29     RET
                        30
                        31     BREAK:
0030 7401               32     MOV A,#01H
0032 317C               33     ACALL SEND_COMMAND
0034 7480               34     MOV A,#80H
0036 317C               35     ACALL SEND_COMMAND
0038 8036               36     SJMP PROCESS
                        37
003A B83107             38     CJNE R0,#031H,IF0
003D AE30               39     MOV R6,30H
003F BE0018             40     CJNE R6,#0,PRE_PROCESS
0042 801E               41     SJMP ERROR
                        42
0044 B8320F             43     IF0: CJNE R0,#032H,NVM2
0047 AE30               44     MOV R6,30H
0049 BE0002             45     CJNE R6,#0,IF2_2
004C 8003               46     SJMP IF2_3
004E BE0111             47     IF2_2:CJNE R6,#1,ERROR
0051 AE31               48     IF2_3:MOV R6,31H
0053 BE0600             49     CJNE R6,#6,NVM2
0056 500A               50     NVM2: JNC ERROR
0058 8016               51     SJMP PROCESS
                        52
                        53
                        54     PRE_PROCESS:
005A 853031             55     MOV 31H,30H
005D 753000             56     MOV 30H,#0
0060 800E               57     SJMP PROCESS
                        58
                        59     ERROR:
0062 900220             60     MOV DPTR,#ERROR_MESSAGE
                        61     ERROR_LOOP:
0065 E4                 62     CLR A
0066 93                 63     MOVC A,@A+DPTR
0067 A3                 64     INC DPTR
0068 6004               65     JZ RESET3
006A 3189               66     ACALL SEND_DATA
006C 80F7               67     SJMP ERROR_LOOP
                        68
                        69     RESET3:
006E 2160               70     AJMP RESET2
                        71
                        72     PROCESS:
0070 E530               73     MOV A,30H
0072 75F00A             74     MOV B,#10
0075 A4                 75     MUL AB
0076 8531F0             76     MOV B,31H
0079 25F0               77     ADD A,B
007B 75F002             78     MOV B,#2
007E A4                 79     MUL AB
007F FA                 80     MOV R2,A
                        81
                        82     DISPLAY_TIME:
0080 758900             83     MOV TMOD,#00000000B
0083 758810             84     MOV TCON,#00010000B
0086 85388C             85     MOV TH0,38H
0089 85398A             86     MOV TL0,39H
008C D2B3               87     SETB P3.3 ; for debugging purposes
                        88     OUTER_LOOP:
008E 7B00               89     MOV R3,#0
                        90     LOOP_START:
0090 BB0028             91     CJNE R3,#0,IF1
0093 EA                 92             MOV A,R2
0094 75F002             93             MOV B,#2
0097 84                 94             DIV AB
0098 AEF0               95             MOV R6,B
009A BE0108             96             CJNE R6,#1,BLANK
009D 75422E             97             MOV 42H,#2EH
00A0 754335             98             MOV 43H,#35H
00A3 8006               99             SJMP NVM3
                       100             BLANK:
00A5 754220            101             MOV 42H,#20H
00A8 754320            102             MOV 43H,#20H
                       103             NVM3:
00AB 75F00A            104             MOV B,#10
00AE 84                105             DIV AB
00AF 2430              106             ADD A,#30H
00B1 F540              107             MOV 40H,A
00B3 E5F0              108             MOV A,B
00B5 2430              109             ADD A,#30H
00B7 F541              110             MOV 41H,A
00B9 2146              111             AJMP CONTINUE
00BB BB010B            112     IF1:CJNE R3,#1,IF2
00BE 854090            113             MOV P1,40H
00C1 D2B5              114             SETB P3.5               ;RS=0 BEFORE SENDING COMMAND
00C3 C2B6              115             CLR P3.6                ;R/W=0 TO WRITE
00C5 D2B7              116             SETB P3.7       ;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
00C7 2146              117             AJMP CONTINUE
00C9 BB0704            118     IF2:CJNE R3,#7,IF3
00CC C2B7              119             CLR P3.7
00CE 2146              120             AJMP CONTINUE
00D0 BB080B            121     IF3:CJNE R3,#8,IF4
00D3 854190            122             MOV P1,41H
00D6 D2B5              123             SETB P3.5               ;RS=0 BEFORE SENDING COMMAND
00D8 C2B6              124             CLR P3.6                ;R/W=0 TO WRITE
00DA D2B7              125             SETB P3.7       ;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
00DC 2146              126             AJMP CONTINUE
00DE BB0E04            127     IF4:CJNE R3,#14,IF5
00E1 C2B7              128             CLR P3.7
00E3 2146              129             AJMP CONTINUE
00E5 BB0F0B            130     IF5:CJNE R3,#15,IF6
00E8 854290            131             MOV P1,42H
00EB D2B5              132             SETB P3.5               ;RS=0 BEFORE SENDING COMMAND
00ED C2B6              133             CLR P3.6                ;R/W=0 TO WRITE
00EF D2B7              134             SETB P3.7       ;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
00F1 2146              135             AJMP CONTINUE
00F3 BB1504            136     IF6:CJNE R3,#21,IF7
00F6 C2B7              137             CLR P3.7
00F8 2146              138             AJMP CONTINUE
00FA BB160B            139     IF7:CJNE R3,#22,IF8
00FD 854390            140             MOV P1,43H
0100 D2B5              141             SETB P3.5               ;RS=0 BEFORE SENDING COMMAND
0102 C2B6              142             CLR P3.6                ;R/W=0 TO WRITE
0104 D2B7              143             SETB P3.7       ;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
0106 2146              144             AJMP CONTINUE
0108 BB1C04            145     IF8:CJNE R3,#28,IF9
010B C2B7              146             CLR P3.7
010D 2146              147             AJMP CONTINUE
010F BB6F0B            148     IF9:CJNE R3,#111,IF10
0112 759001            149             MOV P1,#01H
0115 C2B5              150             CLR P3.5                ;RS=0 BEFORE SENDING COMMAND
0117 C2B6              151             CLR P3.6                ;R/W=0 TO WRITE
0119 D2B7              152             SETB P3.7       ;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
011B 2146              153             AJMP CONTINUE
011D BB7504            154     IF10:CJNE R3,#117,IF11
0120 C2B7              155             CLR P3.7
0122 2146              156             AJMP CONTINUE
0124 BB760B            157     IF11:CJNE R3,#118,IF12
0127 759080            158             MOV P1,#80H
012A C2B5              159             CLR P3.5                ;RS=0 BEFORE SENDING COMMAND
012C C2B6              160             CLR P3.6                ;R/W=0 TO WRITE
012E D2B7              161             SETB P3.7       ;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
0130 2146              162             AJMP CONTINUE
0132 BB7C04            163     IF12:CJNE R3,#124,IF13
0135 C2B7              164             CLR P3.7
0137 2146              165             AJMP CONTINUE
0139 BB7D0A            166     IF13:CJNE R3,#125,CONTINUE
013C 1A                167             DEC R2
013D B2B4              168             CPL P3.4;for debugging purposes
013F BA0004            169             CJNE R2,#0,CONTINUE
0142 C2B3              170             CLR P3.3;for debugging purposes
0144 2154              171             AJMP LAUNCH
                       172     CONTINUE:
0146 308DFD            173     JNB TF0,$
0149 85388C            174     MOV TH0,38H
014C 85398A            175     MOV TL0,39H
014F C28D              176     CLR TF0
0151 0B                177     INC R3
0152 0190              178     AJMP LOOP_START
                       179
                       180     LAUNCH:
0154 900226            181     MOV DPTR,#LAUNCH_MESSAGE
                       182     LAUNCH_LOOP:
0157 E4                183     CLR A
0158 93                184     MOVC A,@A+DPTR
0159 A3                185     INC DPTR
015A 6004              186     JZ RESET2
015C 3189              187     ACALL SEND_DATA
015E 80F7              188     SJMP LAUNCH_LOOP
                       189
                       190     RESET2:
0160 31A7              191     ACALL KEYBOARD
0162 B42AFB            192     CJNE A,#2AH,RESET2
0165 0108              193     AJMP RESET
                       194
                       195     SETUP:
0167 7438              196             MOV A,#38H      ;TWO LINES, 5X7 MATRIX
0169 317C              197             ACALL SEND_COMMAND
016B 740F              198             MOV A,#0FH      ;DISPLAY ON, CURSOR BLINKING
016D 317C              199             ACALL SEND_COMMAND
016F 7406              200             MOV A,#06H      ;INCREMENT CURSOR (SHIFT CURSOR TO RIGHT)
0171 317C              201             ACALL SEND_COMMAND
0173 7401              202             MOV A,#01H      ;CLEAR DISPLAY SCREEN
0175 317C              203             ACALL SEND_COMMAND
0177 7480              204             MOV A,#80H      ;FORCE CURSOR TO BEGINNING OF THE FIRST LINE
0179 317C              205             ACALL SEND_COMMAND
017B 22                206             RET
                       207
                       208     SEND_COMMAND:
017C F590              209             MOV P1,A
017E C2B5              210             CLR P3.5                ;RS=0 BEFORE SENDING COMMAND
0180 C2B6              211             CLR P3.6                ;R/W=0 TO WRITE
0182 D2B7              212             SETB P3.7       ;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
0184 3196              213             ACALL DELAY
0186 C2B7              214             CLR P3.7
0188 22                215             RET
                       216     SEND_DATA:
0189 F590              217             MOV P1,A
018B D2B5              218             SETB P3.5               ;RS=0 BEFORE SENDING COMMAND
018D C2B6              219             CLR P3.6                ;R/W=0 TO WRITE
018F D2B7              220             SETB P3.7       ;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
0191 3196              221             ACALL DELAY
0193 C2B7              222             CLR P3.7
0195 22                223             RET
                       224
                       225     DELAY:
0196 C000              226             PUSH 0
0198 C001              227             PUSH 1
019A 7F32              228             MOV R7,#50
                       229     DELAY_OUTER_LOOP:
019C 7EFF              230             MOV R6,#255
019E DEFE              231             DJNZ R6,$
01A0 DFFA              232             DJNZ R7,DELAY_OUTER_LOOP
01A2 D001              233             POP 1
01A4 D000              234             POP 0
01A6 22                235             RET
                       236
                       237
                       238
                       239     KEYBOARD: ; takes the key pressed from the keyboard and puts it to A
01A7 7580FF            240             mov     P0, #0ffh       ;makes P0 input
                       241     K1:
01AA 75A000            242             mov     P2, #0  ;ground all rows
01AD E580              243             mov     A, P0
01AF 540F              244             anl     A, #00001111B
01B1 B40FF6            245             cjne    A, #00001111B, K1
                       246     K2:
01B4 3196              247             acall   DELAY
01B6 E580              248             mov     A, P0
01B8 540F              249             anl     A, #00001111B
01BA B40F02            250             cjne    A, #00001111B, KB_OVER
01BD 80F5              251             sjmp    K2
                       252     KB_OVER:
01BF 3196              253             acall DELAY
01C1 E580              254             mov     A, P0
01C3 540F              255             anl     A, #00001111B
01C5 B40F02            256             cjne    A, #00001111B, KB_OVER1
01C8 80EA              257             sjmp    K2
                       258     KB_OVER1:
01CA 75A0FE            259             mov     P2, #11111110B
01CD E580              260             mov     A, P0
01CF 540F              261             anl     A, #00001111B
01D1 B40F21            262             cjne    A, #00001111B, ROW_0
01D4 75A0FD            263             mov     P2, #11111101B
01D7 E580              264             mov     A, P0
01D9 540F              265             anl     A, #00001111B
01DB B40F1C            266             cjne    A, #00001111B, ROW_1
01DE 75A0FB            267             mov     P2, #11111011B
01E1 E580              268             mov     A, P0
01E3 540F              269             anl     A, #00001111B
01E5 B40F17            270             cjne    A, #00001111B, ROW_2
01E8 75A0F7            271             mov     P2, #11110111B
01EB E580              272             mov     A, P0
01ED 540F              273             anl     A, #00001111B
01EF B40F12            274             cjne    A, #00001111B, ROW_3
01F2 0201B4            275             ljmp    K2
                       276
                       277     ROW_0:
01F5 900210            278             mov     DPTR, #KCODE0
01F8 800D              279             sjmp    KB_FIND
                       280     ROW_1:
01FA 900214            281             mov     DPTR, #KCODE1
01FD 8008              282             sjmp    KB_FIND
                       283     ROW_2:
01FF 900218            284             mov     DPTR, #KCODE2
0202 8003              285             sjmp    KB_FIND
                       286     ROW_3:
0204 90021C            287             mov     DPTR, #KCODE3
                       288     KB_FIND:
0207 13                289             rrc     A
0208 5003              290             jnc     KB_MATCH
020A A3                291             inc     DPTR
020B 80FA              292             sjmp    KB_FIND
                       293     KB_MATCH:
020D E4                294             clr     A
020E 93                295             movc    A, @A+DPTR; get ASCII code from the table
020F 22                296             ret
                       297
                       298     ;ASCII look-up table
0210 31323323          299     KCODE0: DB      '1', '2', '3', '#'
0214 34353623          300     KCODE1: DB      '4', '5', '6', '#'
0218 37383923          301     KCODE2: DB      '7', '8', '9', '#'
021C 2A302323          302     KCODE3: DB      '*', '0', '#', '#'
                       303
0220 4552524F52        304     ERROR_MESSAGE: DB 'ERROR',0
     00
0226 4C41554E43        305     LAUNCH_MESSAGE: DB 'LAUNCH!',0
     482100
                       306
                       307     ENDD:
022E 80FE              308     SJMP $
                       309     END
ASSEMBLY COMPLETE, NO ERRORS FOUND, NO WARNINGS


SYMBOL TABLE:
??MCU_8051_IDE . . . . . . . . . . .  N  NUMB  8051H  NOT USED
??VERSION. . . . . . . . . . . . . .  N  NUMB  0149H  NOT USED
AC . . . . . . . . . . . . . . . . .  B  ADDR  00D6H  NOT USED
ACC. . . . . . . . . . . . . . . . .  D  ADDR  00E0H  NOT USED
ACSR . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
ADCF . . . . . . . . . . . . . . . .  D  ADDR  00F6H  NOT USED
ADCLK. . . . . . . . . . . . . . . .  D  ADDR  00F2H  NOT USED
ADCON. . . . . . . . . . . . . . . .  D  ADDR  00F3H  NOT USED
ADDH . . . . . . . . . . . . . . . .  D  ADDR  00F5H  NOT USED
ADDL . . . . . . . . . . . . . . . .  D  ADDR  00F4H  NOT USED
AUXR . . . . . . . . . . . . . . . .  D  ADDR  008EH  NOT USED
AUXR1. . . . . . . . . . . . . . . .  D  ADDR  00A2H  NOT USED
B. . . . . . . . . . . . . . . . . .  D  ADDR  00F0H
BDRCON . . . . . . . . . . . . . . .  D  ADDR  009BH  NOT USED
BDRCON_1 . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
BLANK. . . . . . . . . . . . . . . .  C  ADDR  00A5H
BREAK. . . . . . . . . . . . . . . .  C  ADDR  0030H
BRL. . . . . . . . . . . . . . . . .  D  ADDR  009AH  NOT USED
CCAP0H . . . . . . . . . . . . . . .  D  ADDR  00FAH  NOT USED
CCAP0L . . . . . . . . . . . . . . .  D  ADDR  00EAH  NOT USED
CCAP1H . . . . . . . . . . . . . . .  D  ADDR  00FBH  NOT USED
CCAP1L . . . . . . . . . . . . . . .  D  ADDR  00EBH  NOT USED
CCAP2H . . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAP3H . . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAP4H . . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL2H. . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAPL2L. . . . . . . . . . . . . . .  D  ADDR  00ECH  NOT USED
CCAPL3H. . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAPL3L. . . . . . . . . . . . . . .  D  ADDR  00EDH  NOT USED
CCAPL4H. . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL4L. . . . . . . . . . . . . . .  D  ADDR  00EEH  NOT USED
CCAPM0 . . . . . . . . . . . . . . .  D  ADDR  00DAH  NOT USED
CCAPM1 . . . . . . . . . . . . . . .  D  ADDR  00DBH  NOT USED
CCAPM2 . . . . . . . . . . . . . . .  D  ADDR  00DCH  NOT USED
CCAPM3 . . . . . . . . . . . . . . .  D  ADDR  00DDH  NOT USED
CCAPM4 . . . . . . . . . . . . . . .  D  ADDR  00DEH  NOT USED
CCF0 . . . . . . . . . . . . . . . .  B  ADDR  00D8H  NOT USED
CCF1 . . . . . . . . . . . . . . . .  B  ADDR  00D9H  NOT USED
CCF2 . . . . . . . . . . . . . . . .  B  ADDR  00DAH  NOT USED
CCF3 . . . . . . . . . . . . . . . .  B  ADDR  00DBH  NOT USED
CCF4 . . . . . . . . . . . . . . . .  B  ADDR  00DCH  NOT USED
CCON . . . . . . . . . . . . . . . .  D  ADDR  00D8H  NOT USED
CFINT. . . . . . . . . . . . . . . .  C  ADDR  0033H  NOT USED
CH . . . . . . . . . . . . . . . . .  D  ADDR  00F9H  NOT USED
CKCON. . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKCON0 . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKRL . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
CKSEL. . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
CL . . . . . . . . . . . . . . . . .  D  ADDR  00E9H  NOT USED
CLKREG . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CMOD . . . . . . . . . . . . . . . .  D  ADDR  00D9H  NOT USED
CONTINUE . . . . . . . . . . . . . .  C  ADDR  0146H
CPRL2. . . . . . . . . . . . . . . .  B  ADDR  00C8H  NOT USED
CR . . . . . . . . . . . . . . . . .  B  ADDR  00DEH  NOT USED
CT2. . . . . . . . . . . . . . . . .  B  ADDR  00C9H  NOT USED
CY . . . . . . . . . . . . . . . . .  B  ADDR  00D7H  NOT USED
DELAY. . . . . . . . . . . . . . . .  C  ADDR  0196H
DELAY_OUTER_LOOP . . . . . . . . . .  C  ADDR  019CH
DISPLAY_TIME . . . . . . . . . . . .  C  ADDR  0080H  NOT USED
DP0H . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DP0L . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
DP1H . . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
DP1L . . . . . . . . . . . . . . . .  D  ADDR  0084H  NOT USED
DPH. . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DPL. . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
EA . . . . . . . . . . . . . . . . .  B  ADDR  00AFH  NOT USED
EC . . . . . . . . . . . . . . . . .  B  ADDR  00AEH  NOT USED
EECON. . . . . . . . . . . . . . . .  D  ADDR  0096H  NOT USED
ENDD . . . . . . . . . . . . . . . .  C  ADDR  022EH  NOT USED
ERROR. . . . . . . . . . . . . . . .  C  ADDR  0062H
ERROR_LOOP . . . . . . . . . . . . .  C  ADDR  0065H
ERROR_MESSAGE. . . . . . . . . . . .  C  ADDR  0220H
ES . . . . . . . . . . . . . . . . .  B  ADDR  00ACH  NOT USED
ET0. . . . . . . . . . . . . . . . .  B  ADDR  00A9H  NOT USED
ET1. . . . . . . . . . . . . . . . .  B  ADDR  00ABH  NOT USED
ET2. . . . . . . . . . . . . . . . .  B  ADDR  00ADH  NOT USED
EX0. . . . . . . . . . . . . . . . .  B  ADDR  00A8H  NOT USED
EX1. . . . . . . . . . . . . . . . .  B  ADDR  00AAH  NOT USED
EXEN2. . . . . . . . . . . . . . . .  B  ADDR  00CBH  NOT USED
EXF2 . . . . . . . . . . . . . . . .  B  ADDR  00CEH  NOT USED
EXTI0. . . . . . . . . . . . . . . .  C  ADDR  0003H  NOT USED
EXTI1. . . . . . . . . . . . . . . .  C  ADDR  0013H  NOT USED
F0 . . . . . . . . . . . . . . . . .  B  ADDR  00D5H  NOT USED
FE . . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
IE . . . . . . . . . . . . . . . . .  D  ADDR  00A8H  NOT USED
IE0. . . . . . . . . . . . . . . . .  B  ADDR  0089H  NOT USED
IE1. . . . . . . . . . . . . . . . .  B  ADDR  008BH  NOT USED
IF0. . . . . . . . . . . . . . . . .  C  ADDR  0044H
IF1. . . . . . . . . . . . . . . . .  C  ADDR  00BBH
IF10 . . . . . . . . . . . . . . . .  C  ADDR  011DH
IF11 . . . . . . . . . . . . . . . .  C  ADDR  0124H
IF12 . . . . . . . . . . . . . . . .  C  ADDR  0132H
IF13 . . . . . . . . . . . . . . . .  C  ADDR  0139H
IF2. . . . . . . . . . . . . . . . .  C  ADDR  00C9H
IF2_2. . . . . . . . . . . . . . . .  C  ADDR  004EH
IF2_3. . . . . . . . . . . . . . . .  C  ADDR  0051H
IF3. . . . . . . . . . . . . . . . .  C  ADDR  00D0H
IF4. . . . . . . . . . . . . . . . .  C  ADDR  00DEH
IF5. . . . . . . . . . . . . . . . .  C  ADDR  00E5H
IF6. . . . . . . . . . . . . . . . .  C  ADDR  00F3H
IF7. . . . . . . . . . . . . . . . .  C  ADDR  00FAH
IF8. . . . . . . . . . . . . . . . .  C  ADDR  0108H
IF9. . . . . . . . . . . . . . . . .  C  ADDR  010FH
INT0 . . . . . . . . . . . . . . . .  B  ADDR  00B2H  NOT USED
INT1 . . . . . . . . . . . . . . . .  B  ADDR  00B3H  NOT USED
IP . . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPH. . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH0 . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH1 . . . . . . . . . . . . . . . .  D  ADDR  00B3H  NOT USED
IPL0 . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPL1 . . . . . . . . . . . . . . . .  D  ADDR  00B2H  NOT USED
IT0. . . . . . . . . . . . . . . . .  B  ADDR  0088H  NOT USED
IT1. . . . . . . . . . . . . . . . .  B  ADDR  008AH  NOT USED
K1 . . . . . . . . . . . . . . . . .  C  ADDR  01AAH
K2 . . . . . . . . . . . . . . . . .  C  ADDR  01B4H
KBE. . . . . . . . . . . . . . . . .  D  ADDR  009DH  NOT USED
KBF. . . . . . . . . . . . . . . . .  D  ADDR  009EH  NOT USED
KBLS . . . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
KB_FIND. . . . . . . . . . . . . . .  C  ADDR  0207H
KB_MATCH . . . . . . . . . . . . . .  C  ADDR  020DH
KB_OVER. . . . . . . . . . . . . . .  C  ADDR  01BFH
KB_OVER1 . . . . . . . . . . . . . .  C  ADDR  01CAH
KCODE0 . . . . . . . . . . . . . . .  C  ADDR  0210H
KCODE1 . . . . . . . . . . . . . . .  C  ADDR  0214H
KCODE2 . . . . . . . . . . . . . . .  C  ADDR  0218H
KCODE3 . . . . . . . . . . . . . . .  C  ADDR  021CH
KEYBOARD . . . . . . . . . . . . . .  C  ADDR  01A7H
KEYBOARD_LOOP. . . . . . . . . . . .  C  ADDR  001EH
LAUNCH . . . . . . . . . . . . . . .  C  ADDR  0154H
LAUNCH_LOOP. . . . . . . . . . . . .  C  ADDR  0157H
LAUNCH_MESSAGE . . . . . . . . . . .  C  ADDR  0226H
LOOP_START . . . . . . . . . . . . .  C  ADDR  0090H
NVM1 . . . . . . . . . . . . . . . .  C  ADDR  0025H
NVM2 . . . . . . . . . . . . . . . .  C  ADDR  0056H
NVM3 . . . . . . . . . . . . . . . .  C  ADDR  00ABH
OSCCON . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
OUTER_LOOP . . . . . . . . . . . . .  C  ADDR  008EH  NOT USED
OV . . . . . . . . . . . . . . . . .  B  ADDR  00D2H  NOT USED
P. . . . . . . . . . . . . . . . . .  B  ADDR  00D0H  NOT USED
P0 . . . . . . . . . . . . . . . . .  D  ADDR  0080H
P1 . . . . . . . . . . . . . . . . .  D  ADDR  0090H
P1M1 . . . . . . . . . . . . . . . .  D  ADDR  00D4H  NOT USED
P1M2 . . . . . . . . . . . . . . . .  D  ADDR  00E2H  NOT USED
P2 . . . . . . . . . . . . . . . . .  D  ADDR  00A0H
P3 . . . . . . . . . . . . . . . . .  D  ADDR  00B0H
P3M1 . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
P3M2 . . . . . . . . . . . . . . . .  D  ADDR  00E3H  NOT USED
P4 . . . . . . . . . . . . . . . . .  D  ADDR  00C0H  NOT USED
P4M1 . . . . . . . . . . . . . . . .  D  ADDR  00D6H  NOT USED
P4M2 . . . . . . . . . . . . . . . .  D  ADDR  00E4H  NOT USED
P5 . . . . . . . . . . . . . . . . .  D  ADDR  00E8H  NOT USED
PC . . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PCON . . . . . . . . . . . . . . . .  D  ADDR  0087H  NOT USED
PPCL . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PRE_PROCESS. . . . . . . . . . . . .  C  ADDR  005AH
PROCESS. . . . . . . . . . . . . . .  C  ADDR  0070H
PS . . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSL. . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSW. . . . . . . . . . . . . . . . .  D  ADDR  00D0H  NOT USED
PT0. . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT0L . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT1. . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT1L . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT2. . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PT2L . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PX0. . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX0L . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX1. . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
PX1L . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
RB8. . . . . . . . . . . . . . . . .  B  ADDR  009AH  NOT USED
RCAP2H . . . . . . . . . . . . . . .  D  ADDR  00CBH  NOT USED
RCAP2L . . . . . . . . . . . . . . .  D  ADDR  00CAH  NOT USED
RCLK . . . . . . . . . . . . . . . .  B  ADDR  00CDH  NOT USED
RD . . . . . . . . . . . . . . . . .  B  ADDR  00B7H  NOT USED
RECORD_DATA. . . . . . . . . . . . .  C  ADDR  0029H
REN. . . . . . . . . . . . . . . . .  B  ADDR  009CH  NOT USED
RESET. . . . . . . . . . . . . . . .  C  ADDR  0000H
RESET. . . . . . . . . . . . . . . .  C  ADDR  0008H  NOT USED
RESET2 . . . . . . . . . . . . . . .  C  ADDR  0160H
RESET3 . . . . . . . . . . . . . . .  C  ADDR  006EH
RI . . . . . . . . . . . . . . . . .  B  ADDR  0098H  NOT USED
ROW_0. . . . . . . . . . . . . . . .  C  ADDR  01F5H
ROW_1. . . . . . . . . . . . . . . .  C  ADDR  01FAH
ROW_2. . . . . . . . . . . . . . . .  C  ADDR  01FFH
ROW_3. . . . . . . . . . . . . . . .  C  ADDR  0204H
RS0. . . . . . . . . . . . . . . . .  B  ADDR  00D3H  NOT USED
RS1. . . . . . . . . . . . . . . . .  B  ADDR  00D4H  NOT USED
RXD. . . . . . . . . . . . . . . . .  B  ADDR  00B0H  NOT USED
SADDR. . . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_0. . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_1. . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SADEN. . . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_0. . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_1. . . . . . . . . . . . . . .  D  ADDR  00BAH  NOT USED
SBUF . . . . . . . . . . . . . . . .  D  ADDR  0099H  NOT USED
SCON . . . . . . . . . . . . . . . .  D  ADDR  0098H  NOT USED
SEND_COMMAND . . . . . . . . . . . .  C  ADDR  017CH
SEND_DATA. . . . . . . . . . . . . .  C  ADDR  0189H
SETUP. . . . . . . . . . . . . . . .  C  ADDR  0167H
SINT . . . . . . . . . . . . . . . .  C  ADDR  0023H  NOT USED
SM0. . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
SM1. . . . . . . . . . . . . . . . .  B  ADDR  009EH  NOT USED
SM2. . . . . . . . . . . . . . . . .  B  ADDR  009DH  NOT USED
SP . . . . . . . . . . . . . . . . .  D  ADDR  0081H  NOT USED
SPCON. . . . . . . . . . . . . . . .  D  ADDR  00C3H  NOT USED
SPCR . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
SPDAT. . . . . . . . . . . . . . . .  D  ADDR  00C5H  NOT USED
SPDR . . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
SPSR . . . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SPSTA. . . . . . . . . . . . . . . .  D  ADDR  00C4H  NOT USED
T0 . . . . . . . . . . . . . . . . .  B  ADDR  00B4H  NOT USED
T1 . . . . . . . . . . . . . . . . .  B  ADDR  00B5H  NOT USED
T2CON. . . . . . . . . . . . . . . .  D  ADDR  00C8H  NOT USED
T2MOD. . . . . . . . . . . . . . . .  D  ADDR  00C9H  NOT USED
TB8. . . . . . . . . . . . . . . . .  B  ADDR  009BH  NOT USED
TCLK . . . . . . . . . . . . . . . .  B  ADDR  00CCH  NOT USED
TCON . . . . . . . . . . . . . . . .  D  ADDR  0088H
TF0. . . . . . . . . . . . . . . . .  B  ADDR  008DH
TF1. . . . . . . . . . . . . . . . .  B  ADDR  008FH  NOT USED
TF2. . . . . . . . . . . . . . . . .  B  ADDR  00CFH  NOT USED
TH0. . . . . . . . . . . . . . . . .  D  ADDR  008CH
TH1. . . . . . . . . . . . . . . . .  D  ADDR  008DH  NOT USED
TH2. . . . . . . . . . . . . . . . .  D  ADDR  00CDH  NOT USED
TI . . . . . . . . . . . . . . . . .  B  ADDR  0099H  NOT USED
TIMER0 . . . . . . . . . . . . . . .  C  ADDR  000BH  NOT USED
TIMER1 . . . . . . . . . . . . . . .  C  ADDR  001BH  NOT USED
TIMER2 . . . . . . . . . . . . . . .  C  ADDR  002BH  NOT USED
TL0. . . . . . . . . . . . . . . . .  D  ADDR  008AH
TL1. . . . . . . . . . . . . . . . .  D  ADDR  008BH  NOT USED
TL2. . . . . . . . . . . . . . . . .  D  ADDR  00CCH  NOT USED
TMOD . . . . . . . . . . . . . . . .  D  ADDR  0089H
TR0. . . . . . . . . . . . . . . . .  B  ADDR  008CH  NOT USED
TR1. . . . . . . . . . . . . . . . .  B  ADDR  008EH  NOT USED
TR2. . . . . . . . . . . . . . . . .  B  ADDR  00CAH  NOT USED
TXD. . . . . . . . . . . . . . . . .  B  ADDR  00B1H  NOT USED
WDTCON . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTPRG . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTRST . . . . . . . . . . . . . . .  D  ADDR  00A6H  NOT USED
WR . . . . . . . . . . . . . . . . .  B  ADDR  00B6H  NOT USED